use v6;
module CAST::OpKind;
enum OpKind <
    postinc
    postdec
    preinc
    predec
    preneg
    prepos
    add
    and
    bitand
    bitnot
    bitor
    bitshiftl
    bitshiftr
    bitxor
    deref
    div
    iseq
    isge
    isgt
    isle
    islt
    isne
    mod
    mul
    not
    or
    ref
    sub
    assign
    assign_mul
    assign_div
    assign_mod
    assign_add
    assign_sub
    assign_bitshiftl
    assign_bitshiftr
    assign_bitand
    assign_bitxor
    assign_bitor
    sizeof_expr
    sizeof_type
    alignof_type
    alignas_type
    alignas_expr
    atomic_type
    array_declarator
    array_designator
    array_selector
    array_type
    apple_block_declarator
    apple_block_function_expr
    break_stmt
    call
    cast
    cast_initializer_list
    compound_stmt
    continue_stmt
    direct_declarator
    direct_selector
    direct_type
    do_while_stmt
    enum_type
    for_declaration
    for_stmt
    function_declarator
    function_type
    generic_case
    generic_default
    generic_expr
    goto_s_stmt
    goto_stmt
    if_expr
    if_stmt
    indirect_selector
    init_declarator
    initializer
    initializer_list
    labeled_stmt
    parameter
    parameter_type_list
    pointer_declarator
    pointer_type
    return_stmt
    struct_designator
    struct_type
    switch_case
    switch_default
    switch_stmt
    union_type
    while_stmt
    struct_declaration
    struct_declarator
    struct_bit_declarator
    enumerator
    x
>;
